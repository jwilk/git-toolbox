#!/bin/sh

# Copyright Â© 2017-2024 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

usage()
{
    printf 'Usage:\n  %s [-u] TARFILE [TARFILE...]\n  %s [-u] -o DIR TARFILE\n' "$prog" "$prog"
    if [ "${1-}" = long ]
    then
        printf '%s' '
Options:
  -n      don'"'"'t create a checkout
  -u      remove source file after unpacking
  -o DIR  unpack to DIR
  -h      show this help message and exit
'
    fi
}

set -e -u -C
prog="${0##*/}"
xdest=
unlink=
checkout=y
while getopts 'hnuo:' opt
do
    case "$opt" in
        h) usage long; exit 0;;
        n) checkout=;;
        u) unlink=y;;
        o) xdest="$OPTARG";;
        *) exit 1;;
    esac
done
shift $((OPTIND - 1))
if [ $# -eq 0 ]
then
    usage >&2
    exit 1
fi
if [ -n "$xdest" ] && [ "${xdest#/}" = "$xdest" ]
then
    xdest="$PWD/$xdest"
fi
config_regexps=$(tr '\n' '|' <<'EOF'
\[core\]
\trepositoryformatversion = 0
\tfilemode = true
\tbare = false
\tlogallrefupdates = true
\[remote "origin"\]
\turl = (https?|git|file)://([][:/?#@!$&()*+,;a-zA-Z0-9._/~-]|%[0-9a-fA-F]{2})+
\tfetch = [+]refs/heads/[*]:refs/remotes/origin/[*]
\[branch "[a-zA-Z0-9/@,._-]+"\]
\tremote = origin
\tmerge = refs/heads/\S+
EOF
)
for tarfile in "$@"
do
    stat "$tarfile" > /dev/null
    name="$tarfile"
    name="${name%/}"
    for ext in tar tar.gz tar.bz2 tar.xz tar.zst
    do
        sname=${name%."$ext"}
        if [ "$sname" != "$name" ]
        then
            name="$sname"
            break
        fi
    done
    name="${name%.git}"
    name="${name##*/}"
    if [ -n "$xdest" ]
    then
        dest="$xdest"
    else
        dest="$PWD/${name}"
    fi
    mkdir "$dest"
    mkdir "$dest/.git.tmp"
    tar -xf "$tarfile" --strip=1 -C "$dest/.git.tmp" --wildcards \
        '*/HEAD' \
        '*/branches/' \
        '*/logs/' \
        '*/objects/' \
        '*/packed-refs' \
        '*/refs/' \
        '*/config'
    if grep -q -v -x -P "$config_regexps" "$dest/.git.tmp/config"
    then
        printf '%s: suspicious configuration lines found:\n' "$dest/.git.tmp/config" >&2
        # shellcheck disable=SC2063
        grep -v -x -P "$config_regexps" "$dest/.git.tmp/config" | grep --color=auto '.*' >&2
        exit 1
    fi
    mv "$dest/.git.tmp" "$dest/.git"
    printf '%s:\n' "$dest"
    if [ -n "$checkout" ]
    then
        git -C "$dest/" reset --hard
    else
        git -C "$dest" log -1 --pretty='HEAD is now at %h %s'
    fi
    if [ "$unlink" = y ]
    then
        rm -- "$tarfile"
    fi
done


# vim:ts=4 sts=4 sw=4 et
